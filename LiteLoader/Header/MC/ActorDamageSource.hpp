// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class ActorDamageSource {

#define AFTER_EXTRA

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_ACTORDAMAGESOURCE
public:
    class ActorDamageSource& operator=(class ActorDamageSource const &) = delete;
    ActorDamageSource(class ActorDamageSource const &) = delete;
    ActorDamageSource() = delete;
#endif

public:
    /*0*/ virtual ~ActorDamageSource();
    /*1*/ virtual bool isEntitySource() const;
    /*2*/ virtual bool isChildEntitySource() const;
    /*3*/ virtual bool isBlockSource() const;
    /*4*/ virtual bool isFire() const;
    /*5*/ virtual struct std::pair<std::string, std::vector<std::string>> getDeathMessage(std::string, class Actor *) const;
    /*6*/ virtual bool getIsCreative() const;
    /*7*/ virtual bool getIsWorldBuilder() const;
    /*8*/ virtual struct ActorUniqueID getEntityUniqueID() const;
    /*9*/ virtual enum ActorType getEntityType() const;
    /*10*/ virtual enum ActorCategory getEntityCategories() const;
    /*11*/ virtual bool getDamagingEntityIsCreative() const;
    /*12*/ virtual bool getDamagingEntityIsWorldBuilder() const;
    /*13*/ virtual struct ActorUniqueID getDamagingEntityUniqueID() const;
    /*14*/ virtual enum ActorType getDamagingEntityType() const;
    /*15*/ virtual enum ActorCategory getDamagingEntityCategories() const;
    /*16*/ virtual std::unique_ptr<class ActorDamageSource> clone() const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_ACTORDAMAGESOURCE
#endif
    MCAPI static enum ActorDamageCause lookupCause(std::string const &);
    MCAPI static std::string const & lookupCauseName(enum ActorDamageCause);

};